@model IEnumerable<KSS.Areas.Admin.Models.Instance>

@{
    ViewData["Title"] = "Index";
}

<h2>All Classes</h2>
<!--Modal Maker-->
<div id="detailsModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Class Details</h3>
            </div>
            <div class="modal-body">
                <h4 id="startDate"></h4>
                <h4 id="instructor"></h4>
                <h4 id="price"></h4>
                <h4 id="courseName"></h4>
                <h4 id="location"></h4>
                <h4 id="seats"></h4>
                <h4 id="book"></h4>
                <h4 id="bookP"></h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<p>
    <a asp-action="Create">New Class</a>
</p>
<<<<<<< HEAD
<!--Grid container-->
<div class="grid-container">
    <div class="contentContainer">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Course)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Location)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Seats)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Instructor)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookAvailable)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookPrice)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
            {
                <tr onMouseOver="this.style.cursor='pointer'" onclick="getDetails(@item.InstanceId)">
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate.LocalDateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location.Street)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seats)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Instructor.FirstName)
                        @Html.DisplayFor(modelItem => item.Instructor.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BookAvailable)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BookPrice)
                    </td>
                    <td>
                        <a asp-controller="Enrollments" asp-action="Create" asp-route-id="@item.InstanceId">Add Student</a> 
                        <a asp-controller="Enrollments" asp-action="Roster" asp-route-id="@item.InstanceId">Roster</a> 
                        <a asp-action="Edit" asp-route-id="@item.InstanceId">Edit</a> 
                        <a asp-action="Details" asp-route-id="@item.InstanceId">Details</a> 
                        <a asp-action="Delete" asp-route-id="@item.InstanceId">Delete</a>
                    </td>
                </tr>
=======
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Course)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seats)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Graded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Instructor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookPrice)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr onMouseOver="this.style.cursor='pointer'" onclick="getDetails(@item.InstanceId)">
            <td>
                @Html.DisplayFor(modelItem => item.StartDate.LocalDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Course.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.Street)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Seats)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Graded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Instructor.FirstName)
                @Html.DisplayFor(modelItem => item.Instructor.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookPrice)
            </td>
            <td>
                <a asp-controller="Enrollments" asp-action="Create" asp-route-id="@item.InstanceId">Add Student</a> |
                <a asp-controller="Enrollments" asp-action="Roster" asp-route-id="@item.InstanceId">Roster</a> |
                <a asp-action="Edit" asp-route-id="@item.InstanceId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.InstanceId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.InstanceId">Delete</a>
            </td>
        </tr>
>>>>>>> GradeFunction
        }
            </tbody>
        </table>
        <script>
    function getDetails(id) {
        $.ajax({
            url: '@Url.Action("Details", "Instances")',
            dataType: "json",
            type: "POST",
            cache: false,
            data: { id: id },
            success: function (data) {
                if (data.success) {
                    $("#startDate").text(data.startDate);
                    $("#instructor").text(data.instructor);
                    $("#price").text(data.price);
                    $("#courseName").text(data.courseName);
                    $("#location").text(data.location);
                    $("#seats").text(data.seats);
                    $("#book").text(data.book);
                    $("#bookP").text(data.bookP)
                    $("#detailsModal").modal("show");
                }
            },
            error: function (xhr) {
                alert(xhr.responseText);
            }
        });

    }
        </script>
    </div>
    <div class="tooltipContainer">
        <p class="tooltips">
            <big><big><strong>Classes:</strong></big></big><br />
            Use this page to schedule an upcoming class on a certain date, at a specific time, in a specific location.
        </p>
    </div>
</div>


