@model IEnumerable<KSS.Areas.Admin.Models.Course>

@{
    ViewData["Title"] = "Index";
}

<h2>All Courses</h2>
<div id="detailsModal" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Course Details</h4>
            </div>
            <div class="modal-body">
                <h2 id="courseName" align="center"></h2>
                <br />
                <h4 id="typicalPrice"></h4>
                <h4 id="bookAvailible"></h4>
                <h4 id="preReq"></h4>
                <br />
                <p id="courseDetails"></p>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div id="deleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Are you sure you want to delete this location?</h3>
            </div>
            <div class="modal-body">
                <h2 id="courseName2" align="center"></h2>
                <br />
                <h4 id="typicalPrice2"></h4>
                <h4 id="bookAvailible2"></h4>
                <h4 id="preReq2"></h4>
                <br />
                <p id="courseDetails2"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="confirmDelete()">Delete</button>
            </div>
        </div>

    </div>
</div>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.TypicalPrice)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.BookAvailable)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.BookPrice)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Prereq)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CourseCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.TypicalPrice)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.BookAvailable)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.BookPrice)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.Prereq.Name)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CourseCategory.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CourseId">Edit</a> |
                    <button type="button" class="btn btn-default" onclick="getDetails(@item.CourseId)">Details</button> |
                    <button type="button" class="btn btn-danger" onclick="deleteItem(@item.CourseId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function getDetails(id) {


        $.ajax({
            url: '@Url.Action("CourseDetail", "Courses")',
            dataType: "json",
            type: "POST",
            cache: false,
            data: { id: id },
            success: function (data) {
                if (data.success) {

                    $("#courseDetails").text(data.description);
                    $("#courseName").text(data.name);
                    $("#typicalPrice").text("Typical Price : " + data.price + " $");
                    if (data.book) {
                        $("#bookAvailible").text("A book is availible for this course for " + data.bookPrice + " $" );
                    }
                    else {
                        $("#bookAvailible").text("This course does not require a book ");
                    }
                    if (data.preReq != "") {
                        $("#preReq").text("Course Prerequisite : " + data.preReq )
                    }
                    $('#detailsModal').modal('show');
                }
            },
            error: function (xhr) {
                alert(xhr.responseText);
            }
        });

    }

     var deleteId;

    function deleteItem(id) {
        deleteId = null;
        $.ajax({
            url: '@Url.Action("CourseDetail", "Courses")',
            dataType: "json",
            type: "POST",
            cache: false,
            data: { id: id },
            success: function (data) {
                if (data.success) {
                    $("#courseDetails2").text(data.description);
                    $("#courseName2").text(data.name);
                    $("#typicalPrice2").text("Typical Price : " + data.price + " $");
                    if (data.book) {
                        $("#bookAvailible2").text("A book is availible for this course for " + data.bookPrice + " $");
                    }
                    else {
                        $("#bookAvailible2").text("This course does not require a book ");
                    }
                    if (data.preReq != "") {
                        $("#preReq2").text("Course Prerequisite : " + data.preReq)
                    }
                    deleteId = data.id;
                    $("#deleteModal").modal("show");
                }
            },
            error: function (xhr) {
                alert(xhr.responseText);
            }
        });

    }

     function confirmDelete() {
        $.ajax({
            url: '@Url.Action("DeleteConfirmed", "Courses")',
            dataType: "json",
            type: "DELETE",
            cache: false,
            data: { id: deleteId },
            success: function (data) {
                if (data.success) {
                    if (!data.canDelete) {
                        alert(data.message);
                        location.reload();
                    }
                    else {
                        location.reload();
                    }
                }
            },
            error: function (xhr) {
                location.reload();
            }
        });
       
    }
</script>