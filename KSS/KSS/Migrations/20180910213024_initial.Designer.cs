// <auto-generated />
using System;
using KSS.Areas.Admin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KSS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180910213024_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KSS.Areas.Admin.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Book");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("PrereqId");

                    b.HasKey("CourseId");

                    b.HasIndex("PrereqId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstanceId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("UserId");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("InstanceId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.Instance", b =>
                {
                    b.Property<int>("InstanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("LocationId");

                    b.Property<double>("Price");

                    b.Property<int>("Seats");

                    b.Property<DateTimeOffset>("StartDate");

                    b.HasKey("InstanceId");

                    b.HasIndex("CourseId");

                    b.HasIndex("LocationId");

                    b.ToTable("Instance");
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.Property<int>("Zipcode");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Role");

                    b.Property<byte[]>("Salt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.Course", b =>
                {
                    b.HasOne("KSS.Areas.Admin.Models.Course", "Prereq")
                        .WithMany("Courses")
                        .HasForeignKey("PrereqId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.Enrollment", b =>
                {
                    b.HasOne("KSS.Areas.Admin.Models.Instance", "Instance")
                        .WithMany("Enrollments")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KSS.Areas.Admin.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("KSS.Areas.Admin.Models.Instance", b =>
                {
                    b.HasOne("KSS.Areas.Admin.Models.Course", "Course")
                        .WithMany("Instances")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KSS.Areas.Admin.Models.Location", "Location")
                        .WithMany("Instances")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
